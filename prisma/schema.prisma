generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model article {
  id              Int            @id @unique(map: "id")
  title           String         @db.VarChar(255)
  content         String?        @db.Text
  createdAt       DateTime       @db.Timestamp(6)
  accepted        Boolean?
  creator_address String?        @db.VarChar(255)
  likes           Int?
  deprecated      Int?
  article_tags    article_tags[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model article_tags {
  article_id Int?
  tag_id     Int?
  article    article? @relation(fields: [article_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Article_Tags_article_id_fkey")
  tags       tags?    @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "Article_Tags_tag_id_fkey")

  @@index([article_id], map: "Article_Tags_article_id_fkey")
  @@index([tag_id], map: "Article_Tags_tag_id_fkey")
  @@ignore
}

model comment {
  id         BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  content    String? @db.Text
  user_id    Int?
  article_id Int?
}

model tags {
  id           Int            @id @default(autoincrement())
  name         String         @unique(map: "name") @db.VarChar(255)
  article_tags article_tags[] @ignore
}

model user {
  id      BigInt  @id @unique(map: "id") @default(autoincrement()) @db.UnsignedBigInt
  address String? @unique(map: "address") @db.VarChar(255)
  email   String? @unique(map: "email") @db.VarChar(255)
  name    String? @unique(map: "name") @db.VarChar(255)
}
